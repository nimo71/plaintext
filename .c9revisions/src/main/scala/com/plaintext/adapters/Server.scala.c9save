{"ts":1366372928882,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"package com.plaintext.adapters\n\nimport unfiltered.request._\nimport unfiltered.response._\nimport org.clapper.avsl.Logger\nimport unfiltered.jetty.ContextBuilder\nimport unfiltered.filter.Planify\n\nobject Server {\n\tval logger = Logger(Server.getClass)\n\tval http = unfiltered.jetty.Http.local(8080)\n\n\tdef main(args: Array[String]) {\n\t\thttp\n\t\t\t.filter( Planify {\n\t\t\t  \tcase Path(Seg(\"api\"::_)) => Ok ~> ResponseString(\"api call\")\n\t\t\t  \tcase Path(p) => {\n\t  \t\t\t\ttry {\n\t  \t\t\t\t\tval responseContent = new File(\"src/main/resources/www/%s\".format(p)).content\n\t  \t\t\t\t\tp.split(\"\"\"\\.\"\"\") match {\n\t  \t\t\t\t\t\tcase Array(_, \"html\") => Ok ~> HtmlContent ~> ResponseString(responseContent)\n\t  \t\t\t\t\t  \tcase Array(_, \"css\") => Ok ~> CssContent ~> ResponseString(responseContent) \n\t  \t\t\t\t\t  \tcase Array(_, \"js\") => Ok ~> JsContent ~> ResponseString(responseContent) \n\t  \t\t\t\t\t  \tcase _ => Ok ~> ResponseString(responseContent)\n\t  \t\t\t\t\t}\n\t  \t\t\t\t}\n\t  \t\t\t\tcatch {\n\t  \t\t\t\t  \tcase _ => NotFound ~> ResponseString(new File(\"src/main/resources/www/404.html\").content)\n\t  \t\t\t\t}\n\t\t\t  \t}\n\t\t\t})\n//\t\t\t.context(\"/\") { ctx: ContextBuilder =>\n//\t\t\t  \tctx.resources(getClass().getResource(\"/www\"))\n//\t\t\t}\n\t\t\t.run({ svr =>\n\t\t  \t\tlogger.info(\"Starting up server\")\n\t\t\t}, { svr =>\n\t\t\t\tlogger.info(\"Shutting down server\")\n\t\t\t})\n\t}\n}"]],"start1":0,"start2":0,"length1":0,"length2":1284}]],"length":1284}
